// Generated by view binder compiler. Do not edit!
package com.dicoding.subintermidiatesatu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.subintermidiatesatu.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText addDescription;

  @NonNull
  public final ExtendedFloatingActionButton btnCamera;

  @NonNull
  public final ExtendedFloatingActionButton btnGallery;

  @NonNull
  public final ExtendedFloatingActionButton btnUpload;

  @NonNull
  public final ImageView imgPreview;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final ConstraintLayout main;

  private ActivityUploadBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText addDescription, @NonNull ExtendedFloatingActionButton btnCamera,
      @NonNull ExtendedFloatingActionButton btnGallery,
      @NonNull ExtendedFloatingActionButton btnUpload, @NonNull ImageView imgPreview,
      @NonNull ProgressBar loadingProgressBar, @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.addDescription = addDescription;
    this.btnCamera = btnCamera;
    this.btnGallery = btnGallery;
    this.btnUpload = btnUpload;
    this.imgPreview = imgPreview;
    this.loadingProgressBar = loadingProgressBar;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_description;
      EditText addDescription = ViewBindings.findChildViewById(rootView, id);
      if (addDescription == null) {
        break missingId;
      }

      id = R.id.btn_camera;
      ExtendedFloatingActionButton btnCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnCamera == null) {
        break missingId;
      }

      id = R.id.btn_gallery;
      ExtendedFloatingActionButton btnGallery = ViewBindings.findChildViewById(rootView, id);
      if (btnGallery == null) {
        break missingId;
      }

      id = R.id.btn_upload;
      ExtendedFloatingActionButton btnUpload = ViewBindings.findChildViewById(rootView, id);
      if (btnUpload == null) {
        break missingId;
      }

      id = R.id.img_preview;
      ImageView imgPreview = ViewBindings.findChildViewById(rootView, id);
      if (imgPreview == null) {
        break missingId;
      }

      id = R.id.loadingProgressBar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new ActivityUploadBinding((ConstraintLayout) rootView, addDescription, btnCamera,
          btnGallery, btnUpload, imgPreview, loadingProgressBar, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
